{"version":3,"sources":["api/index.js","components/Cards/IndividualCard.jsx","components/Cards/Cards.jsx","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Header/Header.jsx","App.js","index.js","App.module.css","components/Cards/Cards.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Info","value","subHead","useState","raised","setRaised","Grid","item","xs","md","Card","onMouseOver","onMouseOut","className","temp","cx","styles","card","infected","newCard","temperatureClassname","CardContent","Typography","color","gutterBottom","variant","component","start","end","duration","separator","Date","toDateString","cardObj","subhead","cardsRender","i","cardValue","Fragment","key","IndividualCard","container","spacing","justify","Chart","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","useStyles","makeStyles","theme","root","position","bottom","right","appBar","toolBar","alignItems","justifyContent","ScrollTop","props","children","window","classes","trigger","useScrollTrigger","undefined","disableHysteresis","threshold","Zoom","in","onClick","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","BackToTop","CssBaseline","AppBar","Toolbar","src","covidLogo","alt","height","id","Fab","size","aria-label","App","state","setState","this","Container","Box","my","CountryPicker","Cards","React","Component","ReactDOM","render","getElementById","module","exports"],"mappings":"uRAEMA,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACnBC,EAAgBJ,EAEhBE,IACFE,EAAa,UAAMJ,EAAN,sBAAuBE,IAJf,kBAQgDG,IAAMC,IAAIF,GAR1D,2BAQbG,KAAQC,EARK,EAQLA,UAAWC,EARN,EAQMA,UAAWC,EARjB,EAQiBA,OAAQC,EARzB,EAQyBA,WARzB,kBAUd,CAAEH,YAAWC,YAAWC,SAAQC,eAVlB,2HAAH,sDAgBTC,EAAc,uCAAG,8BAAAT,EAAA,+EAEHE,IAAMC,IAAN,UAAaN,EAAb,WAFG,uBAElBO,EAFkB,EAElBA,KAFkB,kBAInBA,EAAKM,KAAI,gBAAGL,EAAH,EAAGA,UAAWE,EAAd,EAAcA,OAAoBI,EAAlC,EAAsBC,WAAtB,MAA8C,CAAEP,UAAWA,EAAUQ,MAAON,OAAQA,EAAOM,MAAOF,YAJxF,wHAAH,qDAUdG,EAAc,uCAAG,8BAAAd,EAAA,+EAEYE,IAAMC,IAAN,UAAaN,EAAb,eAFZ,uBAEVkB,EAFU,EAElBX,KAAQW,UAFU,kBAInBA,EAAUL,KAAI,SAACX,GAAD,OAAaA,EAAQiB,SAJhB,wHAAH,qD,+GC2BZC,EAnDF,SAAC,GAAoC,IAAlCD,EAAiC,EAAjCA,KAAME,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,QAASR,EAAW,EAAXA,KAAW,EACnBS,oBAAS,GADU,mBACxCC,EADwC,KAChCC,EADgC,KAuB/C,OACE,oCACE,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CACAC,YAAa,WArBjBN,GAAU,IAsBNO,WAAY,WAlBhBP,GAAU,IAmBND,OAAQA,EACRS,UAjBN,SAA8BC,GAE5B,OAAQA,GACN,IAAK,WAAY,OAAOC,IAAGC,IAAOC,KAAMD,IAAOE,SAAUF,IAAOG,SAChE,IAAK,YAAa,OAAOJ,IAAGC,IAAOC,KAAMD,IAAO3B,UAAW2B,IAAOG,SAClE,IAAK,SAAU,OAAOJ,IAAGC,IAAOC,KAAMD,IAAO1B,OAAQ0B,IAAOG,SAC5D,QAAU,OAAOJ,IAAGC,IAAOC,KAAMD,IAAOE,SAAUF,IAAOG,UAW5CC,CAAqBrB,IAEhC,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAC3CzB,GAEH,kBAACuB,EAAA,EAAD,CAAYG,QAAQ,KAAKC,UAAU,KAAKF,cAAY,GAClD,kBAAC,IAAD,CAASG,MAAO,EAAGC,IAAK3B,EAAO4B,SAAU,IAAKC,UAAU,OAE1D,kBAACR,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAC3C,IAAIO,KAAKrC,GAAMsC,gBAElB,kBAACV,EAAA,EAAD,CAAYG,QAAQ,QAAQC,UAAU,KACnCxB,QC5CP+B,EAAU,CACd,CACElC,KAAM,WACNmC,QAAS,uCAEX,CACEnC,KAAM,YACNmC,QAAS,uCAEX,CACEnC,KAAM,SACNmC,QAAS,yCAqCElC,EAjCF,SAAC,GAA4D,IAAD,IAAzDb,KAAQC,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,WAEpD,IAAKH,EACH,MAAO,aAGT,IAAM+C,EACJF,EAAQxC,KAAI,SAACwB,EAAMmB,GACnB,IAAIC,EAAY,EAShB,OAPEA,EADe,aAAdpB,EAAKlB,KACMX,EAAUa,MACD,cAAdgB,EAAKlB,KACAV,EAAUY,MACD,WAAdgB,EAAKlB,KACAT,EAAOW,MAEP,EAEZ,kBAAC,IAAMqC,SAAP,CAAgBC,IAAKH,GACnB,kBAACI,EAAD,CAAgBzC,KAAMkB,EAAKlB,KAAME,MAAOoC,EAAWnC,QAASe,EAAKiB,QAASxC,KAAMH,QAMtF,OACE,yBAAKsB,UAAWG,IAAOyB,WACrB,kBAACnC,EAAA,EAAD,CAAMmC,WAAS,EAACC,QAAS,EAAGC,QAAQ,UACjCR,K,yBCuBMS,EAhED,SAAC,GAAyD,IAAD,IAAtDzD,KAAQC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAUR,EAAc,EAAdA,QAAc,EACnCqB,mBAAS,IAD0B,mBAC9D0C,EAD8D,KACnDC,EADmD,KAGrEC,qBAAU,YACQ,uCAAG,4BAAAhE,EAAA,sEACcS,IADd,OACXwD,EADW,OAGjBF,EAAaE,GAHI,2CAAH,qDAMhBC,KACC,IAEH,IAAMC,EACJ9D,EACE,kBAAC,IAAD,CACED,KAAM,CACJgE,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CACR,CACEC,MAAO,SACPC,gBAAiB,CAAC,uBAAwB,uBAAwB,wBAClEnE,KAAM,CAACC,EAAUa,MAAOZ,EAAUY,MAAOX,EAAOW,UAItDsD,QAAS,CACPC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,EAAME,KAAK,oBAAD,OAAsB7E,OAGpD,KAGA8E,EACJf,EAAU,GACR,kBAAC,IAAD,CACE1D,KAAM,CACJgE,OAAQN,EAAUpD,KAAI,qBAAGC,QACzB0D,SAAU,CAAC,CACTjE,KAAM0D,EAAUpD,KAAI,SAACN,GAAD,OAAUA,EAAKC,aACnCiE,MAAO,WACPQ,YAAa,UACbC,MAAM,GACL,CACD3E,KAAM0D,EAAUpD,KAAI,SAACN,GAAD,OAAUA,EAAKG,UACnC+D,MAAO,SACPQ,YAAa,MACbP,gBAAiB,uBACjBQ,MAAM,OAKV,KAGN,OACE,yBAAKjD,UAAWG,IAAOyB,WACpB3D,EAAUoE,EAAWU,I,mCCtCbG,EArBG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAA0B,EACX7D,mBAAS,IADE,mBACtCL,EADsC,KAC3BmE,EAD2B,KAW7C,OARAlB,qBAAU,YACM,uCAAG,sBAAAhE,EAAA,kEACfkF,EADe,SACIpE,IADJ,6EAAH,qDAIdqE,KACC,IAGD,kBAACC,EAAA,EAAD,CAAatD,UAAWG,IAAOoD,aAC7B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOR,EAAoBQ,EAAEC,OAAOxE,SAC1E,4BAAQA,MAAM,IAAd,UACCH,EAAUL,KAAI,SAACX,EAASsD,GAAV,OAAgB,4BAAQG,IAAKH,EAAGnC,MAAOnB,GAAUA,S,uGCVlE4F,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,QACVC,OAAQH,EAAMlC,QAAQ,GACtBsC,MAAOJ,EAAMlC,QAAQ,IAEvBuC,OAAQ,CACJ3B,gBAAiB,QAErB4B,QAAS,CACPzB,QAAS,OACT0B,WAAY,SACZC,eAAgB,cAIpB,SAASC,GAAUC,GAAQ,IACjBC,EAAqBD,EAArBC,SAAUC,EAAWF,EAAXE,OACZC,EAAUf,KAIVgB,EAAUC,YAAiB,CAC/BlB,OAAQe,EAASA,SAAWI,EAC5BC,mBAAmB,EACnBC,UAAW,MAWb,OACE,kBAACC,EAAA,EAAD,CAAMC,GAAIN,GACR,yBAAKO,QAVW,SAACC,GACnB,IAAMC,GAAUD,EAAMzB,OAAO2B,eAAiBC,UAAUC,cAAc,uBAElEH,GACFA,EAAOI,eAAe,CAAEC,SAAU,SAAUC,MAAO,YAMxBC,KAAK,eAAe7F,UAAW4E,EAAQZ,MAC/DU,IAeM,SAASoB,GAAUrB,GAC9B,IAAMG,EAAUf,KAClB,OACE,kBAAC,IAAMpC,SAAP,KACE,kBAACsE,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQhG,UAAW4E,EAAQR,QACzB,kBAAC6B,EAAA,EAAD,CAASjG,UAAW4E,EAAQP,SAE1B,yBAAK6B,IAAKC,KAAWC,IAAI,WAAWC,OAAO,WAG/C,kBAACJ,EAAA,EAAD,CAASK,GAAG,uBACZ,kBAAC9B,GAAcC,EACb,kBAAC8B,EAAA,EAAD,CAAK7F,MAAM,UAAU8F,KAAK,QAAQC,aAAW,sBAC3C,kBAAC,KAAD,S,ICjCKC,G,4MAtCbC,MAAQ,CACNrI,KAAM,GACNL,QAAS,I,EASXkF,oB,uCAAsB,WAAOlF,GAAP,eAAAC,EAAA,sEACDF,EAAUC,GADT,OACdK,EADc,OAGpB,EAAKsI,SAAS,CAAEtI,OAAML,QAASA,IAHX,2C,wPALDD,I,OAAbM,E,OAENuI,KAAKD,SAAS,CAAEtI,S,qIASR,IAAD,EACmBuI,KAAKF,MAAvBrI,EADD,EACCA,KAAML,EADP,EACOA,QAEd,OACE,oCACE,kBAAC,GAAD,MACA,kBAAC6I,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,yBAAKhH,UAAWG,IAAOyB,WAErB,kBAACqF,EAAD,CAAe9D,oBAAqB0D,KAAK1D,sBACzC,kBAAC+D,EAAD,CAAO5I,KAAMA,IACb,kBAAC,EAAD,CAAOA,KAAMA,EAAML,QAASA,Y,GA9BxBkJ,IAAMC,WCHxBC,IAASC,OAAO,kBAAC,GAAD,MAAS9B,SAAS+B,eAAe,U,mBCJjDC,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,kBCA7DD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,sBAAsB,QAAU,yB,mBCAnMD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC,mBCDhCD,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.e8ea9f98.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n","import { Card, CardContent, Grid, Typography } from '@material-ui/core';\nimport cx from 'classnames';\nimport React, { useState } from 'react';\nimport CountUp from 'react-countup';\nimport styles from './Cards.module.css';\n\nconst Info = ({ name, value, subHead, date }) => {\n  const [raised, setRaised] = useState(false);\n\n  // console.log(\"Prop==\", props)\n\n  const onMouseOver = () => {\n    setRaised(true);\n  }\n\n  const onMouseOut = () => {\n    setRaised(false);\n  }\n\n  function temperatureClassname(temp){\n  \n    switch (temp) {\n      case 'Infected': return cx(styles.card, styles.infected, styles.newCard)\n      case 'Recovered': return cx(styles.card, styles.recovered, styles.newCard)\n      case 'Deaths': return cx(styles.card, styles.deaths, styles.newCard)\n      default : return cx(styles.card, styles.infected, styles.newCard)\n    }\n  }\n\n  return (\n    <>\n      <Grid item xs={12} md={3} >\n        <Card \n        onMouseOver={() => onMouseOver()}\n        onMouseOut={() => onMouseOut()}\n        raised={raised}\n        className={temperatureClassname(name)}\n        >\n        <CardContent>\n          <Typography color=\"textSecondary\" gutterBottom>\n            {name}\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n            <CountUp start={0} end={value} duration={1.5} separator=\",\" />\n          </Typography>\n          <Typography color=\"textSecondary\" gutterBottom>\n            {new Date(date).toDateString()}\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            {subHead}\n          </Typography>\n        </CardContent>\n        </Card>\n      </Grid>\n    </>\n  );\n};\nexport default Info;\n","import { Grid } from '@material-ui/core';\nimport React from 'react';\nimport styles from './Cards.module.css';\nimport IndividualCard from './IndividualCard';\n\nconst cardObj = [\n  {\n    name: 'Infected',\n    subhead: 'Number of active cases of COVID-19.', \n  },\n  {\n    name: 'Recovered',\n    subhead: 'Number of recoveries from COVID-19.',\n  },\n  {\n    name: 'Deaths',\n    subhead: 'Number of deaths caused by COVID-19.',\n  },\n]\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n\n  if (!confirmed) {\n    return 'Loading...';\n  }\n\n  const cardsRender =  \n    cardObj.map((card, i) => {\n    let cardValue = 0;\n    if(card.name === 'Infected')\n      cardValue = confirmed.value; \n    else if (card.name === 'Recovered')\n      cardValue = recovered.value;\n    else if (card.name === 'Deaths')\n      cardValue = deaths.value  \n    else\n      cardValue = 1;\n    return (\n      <React.Fragment key={i}>\n        <IndividualCard name={card.name} value={cardValue} subHead={card.subhead} date={lastUpdate}/>\n      </React.Fragment>\n    )\n    }\n    )\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        {cardsRender}\n      </Grid>\n    </div>\n  );\n};\nexport default Info;\n","import React, { useEffect, useState } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\nimport styles from './Chart.module.css';\n\n\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = (\n    confirmed ? (\n      <Bar\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Current state in ${country}` },\n        }}\n      />\n    ) : null\n  );\n\n  const lineChart = (\n    dailyData[0] ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          }, {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">Global</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","import AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Fab from '@material-ui/core/Fab';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Zoom from '@material-ui/core/Zoom';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport covidLogo from '../../images/image.png';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  appBar: {\n      backgroundColor: '#fff',\n  },\n  toolBar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  }\n}));\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default function BackToTop(props) {\n    const classes = useStyles();\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar className={classes.appBar}>\n        <Toolbar className={classes.toolBar}>\n          {/* <Typography variant=\"h6\">Covid 19 Live</Typography> */}\n          <img src={covidLogo} alt=\"Covid 19\" height=\"41px\" />\n        </Toolbar>\n      </AppBar>\n      <Toolbar id=\"back-to-top-anchor\" />\n      <ScrollTop {...props}>\n        <Fab color=\"primary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </React.Fragment>\n  );\n}\n","import Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport React from 'react';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\nimport { Cards, Chart, CountryPicker, Header } from './components';\n\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <>\n        <Header />\n        <Container>\n          <Box my={2}>\n            <div className={styles.container}>\n              {/* <img className={styles.image} src={image} alt=\"COVID-19\" /> */}\n              <CountryPicker handleCountryChange={this.handleCountryChange} />\n              <Cards data={data} />\n              <Chart data={data} country={country} /> \n            </div>\n          </Box>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\",\"newCard\":\"Cards_newCard__31UFl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}