{"version":3,"sources":["images/image.png","api/index.js","components/Delta/Delta.jsx","components/Cards/IndividualCard.jsx","components/Cards/Cards.jsx","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","utils/index.js","components/DataTable/DataTable.js","components/Footer/Footer.jsx","components/Header/Header.jsx","App.js","index.js","components/Cards/Cards.module.css","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","url","apiUrl","fetchCountryData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","fetchIndiaData","statewise","stateData","filter","b","state","sort","parseInt","active","lastupdatedtime","deltaconfirmed","deltadeaths","deltarecovered","stateName","lastUpdated","totData","value","fetchIndiaGraphData","cases_time_series","graphData","dailyconfirmed","dailydeceased","dailyrecovered","Delta","inpCnt","color","size","fromCard","className","fontSize","start","end","duration","separator","Info","subHead","deltaColor","useState","raised","setRaised","Grid","item","xs","md","Card","onMouseOver","onMouseOut","temp","cx","styles","card","infected","newCard","temperatureClassname","CardContent","Typography","gutterBottom","variant","component","cardObj","subhead","cardsRender","i","cardValue","delta","dColor","Fragment","key","IndividualCard","container","spacing","justify","refreshDate","Date","toDateString","Chart","dataset","title","isGraphDataArr","Array","isArray","label","borderColor","fill","backgroundColor","lineChart","labels","datasets","options","display","text","barChart","legend","arr","Countries","handleCountryChange","setCountries","useEffect","count","len","length","push","fetchAPI","FormControl","formControl","defaultValue","placeholder","isSearchable","onChange","selectedOption","style","width","descendingComparator","orderBy","useStyles","makeStyles","theme","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","DataTable","index","classes","setOrderBy","order","setOrder","firstLabel","headCells","id","numeric","disablePadding","tableData","TableRow","TableCell","align","colSpan","array","comparator","stabilizedThis","el","stableSort","getComparator","hover","scope","lastUpdatedSec","tableContainer","TableContainer","Paper","Table","stickyHeader","aria-label","TableHead","headCell","sortDirection","TableSortLabel","direction","onClick","property","event","TableBody","Footer","href","target","rel","root","bottom","right","appBar","toolBar","alignItems","justifyContent","ScrollTop","props","children","window","trigger","useScrollTrigger","undefined","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","BackToTop","CssBaseline","AppBar","Toolbar","src","covidLogo","alt","Fab","App","setState","this","Container","Box","my","CountryPicker","Cards","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.09b4b720.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\nconst apiUrl = 'https://api.covid19india.org';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\n// export const fetchDailyData = async () => {\n//   try {\n//     const { data } = await axios.get(`${url}/daily`);\n\n//     return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n//   } catch (error) {\n//     return error;\n//   }\n// };\n\nexport const fetchCountryData = async (country) => {\n  let changeableUrl = !country ? url : `${url}/countries/${country}`;\n  try {\n      const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n      return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n      console.log(\"Error 1\", error);\n  }\n}\n\nexport const fetchDailyData = async () => {\n  try {\n      const { data } = await axios.get(`${url}/daily`);\n      const modifiedData = data.map(dailyData => ({\n          confirmed: dailyData.confirmed.total,\n          deaths: dailyData.deaths.total,\n          date: dailyData.reportDate\n      }));\n      return modifiedData;\n  } catch (error) {\n      console.log(\"Error 2\", error)\n  }\n}\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n\n\nexport const fetchIndiaData = async () => {\n  try {\n      const {data : {statewise}}  = await axios.get(`${apiUrl}/data.json`);\n      // const stateData = data.filter((state) => state.state === \"Tamil Nadu\")\n      const stateData = statewise.filter((a, b) => a.state!=='Total')\n          .sort((a, b) => parseInt(b.confirmed) - parseInt(a.confirmed))\n          .map(({ state, confirmed, active, recovered,\n              deaths, lastupdatedtime, deltaconfirmed, deltadeaths, deltarecovered}) => {\n              return {\n                  stateName: state,\n                  confirmed: parseInt(confirmed),\n                  active: parseInt(active),\n                  recovered: parseInt(recovered),\n                  deaths: parseInt(deaths),\n                  deltaconfirmed: parseInt(deltaconfirmed),\n                  deltarecovered: parseInt(deltarecovered),\n                  deltadeaths: parseInt(deltadeaths),\n                  lastUpdated: lastupdatedtime\n              }\n          });\n      const totData = statewise.filter((a, b) => a.state==='Total')\n          .map(({  confirmed, recovered,\n              deaths, deltaconfirmed, deltadeaths, deltarecovered}) => {\n                  return {\n                      confirmed: {value: parseInt(confirmed)},\n                      recovered: {value: parseInt(recovered)},\n                      deaths: {value: parseInt(deaths)},\n                      deltaconfirmed: parseInt(deltaconfirmed),\n                      deltarecovered: parseInt(deltarecovered),\n                      deltadeaths: parseInt(deltadeaths),\n                  }\n              });\n      return { stateData, totData };\n  } catch (error) {\n      console.log(\"Error 3\", error);\n  }\n}\n\nexport const fetchIndiaGraphData = async () => {\n  try {\n      const {data : {cases_time_series}}  = await axios.get(`${apiUrl}/data.json`);\n      // const stateData = data.filter((state) => state.state === \"Tamil Nadu\")\n      const graphData = cases_time_series\n          .map(({ dailyconfirmed, dailydeceased, dailyrecovered, date}) => {\n              return {\n                  date,\n                  confirmed: parseInt(dailyconfirmed),\n                  recovered: parseInt(dailyrecovered),\n                  deaths: parseInt(dailydeceased),\n              }\n          });\n      return graphData;\n  } catch (error) {\n      console.log(\"Error 4\", error);\n  }\n}","import EjectRoundedIcon from '@material-ui/icons/EjectRounded';\nimport React from 'react';\nimport CountUp from 'react-countup';\nimport './Delta.css';\n\n\nconst Delta = ({ inpCnt, color, size, fromCard }) => {\n    return (\n        <>\n            <div className={fromCard ? `space` : null}>\n            <span className={`delta-data-${color} delta-data-${size}`}>\n                <EjectRoundedIcon fontSize=\"small\" className={fromCard ? `delta-data-${size} delta-data-icon-${size}` :\n                `delta-data-${size} delta-data-icon-${size} space1 tableSpace`\n                } />\n                <CountUp start={0} end={inpCnt ? inpCnt : 0} duration={2.5} separator=\",\" />{' '}\n            </span>\n            </div>\n        </>\n    );\n}\n\nexport default Delta;","import { Card, CardContent, Grid, Typography } from '@material-ui/core';\nimport cx from 'classnames';\nimport React, { useState } from 'react';\nimport CountUp from 'react-countup';\nimport Delta from '../Delta/Delta';\nimport styles from './Cards.module.css';\n\nconst Info = ({ name, value, subHead, deltaconfirmed, deltaColor }) => {\n  const [raised, setRaised] = useState(false);\n\n\n  const onMouseOver = () => {\n    setRaised(true);\n  }\n\n  const onMouseOut = () => {\n    setRaised(false);\n  }\n\n  function temperatureClassname(temp){\n  \n    switch (temp) {\n      case 'Infected': return cx(styles.card, styles.infected, styles.newCard)\n      case 'Recovered': return cx(styles.card, styles.recovered, styles.newCard)\n      case 'Deaths': return cx(styles.card, styles.deaths, styles.newCard)\n      default : return cx(styles.card, styles.infected, styles.newCard)\n    }\n  }\n\n  return (\n    <>\n      <Grid item xs={12} md={3} >\n        <Card \n        onMouseOver={() => onMouseOver()}\n        onMouseOut={() => onMouseOut()}\n        raised={raised}\n        className={temperatureClassname(name)}\n        >\n        <CardContent>\n          <Typography color=\"textSecondary\" gutterBottom>\n            {name}\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n            <CountUp start={0} end={value} duration={1} separator=\",\" />\n          </Typography>\n          {/* <Typography color=\"textSecondary\" gutterBottom>\n            {new Date(date).toDateString()}\n          </Typography> */}\n          <Typography variant=\"body2\" component=\"p\">\n            {subHead}\n          </Typography>\n          {deltaconfirmed > 0 ? \n          <Delta inpCnt={deltaconfirmed} color={deltaColor} size='med' fromCard={true}/>\n          : null}\n        </CardContent>\n        </Card>\n      </Grid>\n    </>\n  );\n};\nexport default Info;\n","import { Grid, Typography } from '@material-ui/core';\nimport React from 'react';\nimport styles from './Cards.module.css';\nimport IndividualCard from './IndividualCard';\n\nconst cardObj = [\n  {\n    name: 'Infected',\n    subhead: 'Number of active cases of COVID-19.', \n  },\n  {\n    name: 'Recovered',\n    subhead: 'Number of recoveries from COVID-19.',\n  },\n  {\n    name: 'Deaths',\n    subhead: 'Number of deaths caused by COVID-19.',\n  },\n]\n\n\nconst Info = ({ data }) => {\n\n  const { confirmed, recovered, deaths, lastUpdate, deltaconfirmed, deltadeaths, deltarecovered } \n            = (data && data.totData) ? data.totData[0] : data;\n\n  if (!confirmed) {\n    return 'Loading...';\n  }\n\n  const cardsRender =  \n    cardObj.map((card, i) => {\n    let cardValue = 0;\n    let delta = 0;\n    let dColor = 'grey';\n    if(card.name === 'Infected') {\n      cardValue = confirmed.value; \n      delta = deltaconfirmed;\n      dColor = 'blue';\n    }  \n    else if (card.name === 'Recovered') {\n      cardValue = recovered.value;\n      delta = deltarecovered;\n      dColor = 'green';\n    }\n    else if (card.name === 'Deaths') {\n      cardValue = deaths.value  \n      delta = deltadeaths;\n      dColor = 'red';\n    }\n    else {\n      cardValue = 0;\n      delta = 0;\n      dColor = 'grey';\n    }\n    return (\n      <React.Fragment key={i}>\n        <IndividualCard name={card.name} value={cardValue} subHead={card.subhead} deltaconfirmed={delta} deltaColor={dColor}/>\n      </React.Fragment>\n    )\n    }\n    )\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        { lastUpdate && <Grid item xs={12} >\n          <Typography color=\"textSecondary\" gutterBottom className={styles.refreshDate}>\n              Data last refreshed: {new Date(lastUpdate).toDateString()}\n          </Typography>\n        </Grid>}\n        {cardsRender}\n      </Grid>\n    </div>\n  );\n};\nexport default Info;\n","import React from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\n\n// const Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n//   const [dailyData, setDailyData] = useState({});\n//   const [graphData, setGraphData] = useState([]);\n\n//   useEffect(() => {\n//     const fetchMyAPI = async () => {\n//       let initialDailyData = {};\n//       if(country === 'India') {\n//         console.log(\"Set India data\");\n//         const fetchData = async () => {\n//             setDailyData(await fetchIndiaData());\n//         }\n//         fetchData();\n//         const fetchGraphData = async () => {\n//             setGraphData(await fetchIndiaGraphData());\n//         }\n//         fetchGraphData();\n//       }\n//       initialDailyData = await fetchDailyData();\n\n//       setDailyData(initialDailyData);\n//     };\n\n//     fetchMyAPI();\n//   }, [country]);\n\n//   const barChart = (\n//     confirmed ? (\n//       <Bar\n//         data={{\n//           labels: ['Infected', 'Recovered', 'Deaths'],\n//           datasets: [\n//             {\n//               label: 'People',\n//               backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n//               data: [confirmed.value, recovered.value, deaths.value],\n//             },\n//           ],\n//         }}\n//         options={{\n//           legend: { display: false },\n//           title: { display: true, text: `Current state in ${country}` },\n//         }}\n//       />\n//     ) : null\n//   );\n\n//   const lineChart = (\n//     dailyData[0] ? (\n//       <Line\n//         data={{\n//           labels: dailyData.map(({ date }) => date),\n//           datasets: [{\n//             data: dailyData.map((data) => data.confirmed),\n//             label: 'Infected',\n//             borderColor: '#3333ff',\n//             fill: true,\n//           }, {\n//             data: dailyData.map((data) => data.deaths),\n//             label: 'Deaths',\n//             borderColor: 'red',\n//             backgroundColor: 'rgba(255, 0, 0, 0.5)',\n//             fill: true,\n//           },\n//           ],\n//         }}\n//       />\n//     ) : null\n//   );\n\n//   return (\n//     <div className={styles.container}>\n//       {country ? barChart : lineChart}\n//     </div>\n//   );\n// };\n\n// export default Chart;\n\n\nconst Chart = ({ graphData, country }) => {\n\n  let dataset = [], title = '', isGraphDataArr = Array.isArray(graphData);\n\n  if (country === 'India' && isGraphDataArr && graphData) {\n      dataset = [{\n          data: isGraphDataArr ? graphData.map(({ confirmed }) => confirmed) : [],\n          label: 'Confirmed',\n          borderColor: 'rgba(0, 0, 255, 0.5)',\n          fill: true\n      }, {\n          data: isGraphDataArr ? graphData.map(({ recovered }) => recovered) : [],\n          label: 'Recovered',\n          borderColor: 'rgba(0, 255, 0, 0.5)',\n          fill: true\n      }, {\n          data: isGraphDataArr ? graphData.map(({ deaths }) => deaths) : [],\n          label: 'Deceased',\n          borderColor: 'rgba(255, 0, 0, 0.5)',\n          fill: true\n      }];\n      title = `Daily Cases Timeline`;\n  } else if (isGraphDataArr && graphData) {\n      dataset = [{\n          data: graphData.map(({ confirmed }) => confirmed),\n          label: 'Confirmed',\n          borderColor: 'rgba(0, 0, 255, 0.5)',\n          fill: true\n      }, {\n          data: graphData.map(({ deaths }) => deaths),\n          label: 'Deceased',\n          borderColor: 'rgba(255, 0, 0, 0.5)',\n          fill: true\n      }];\n      title = `Daily Cases Growth`;\n  } else if (!isGraphDataArr && graphData && graphData.confirmed ) {\n      dataset = [{\n          label: 'People',\n          backgroundColor: [\n              'rgba(0, 0, 255, 0.5)',\n              'rgba(0, 255, 0, 0.5)',\n              'rgba(255, 0, 0, 0.5)'],\n          data: [graphData.confirmed.value, graphData.recovered.value, graphData.deaths.value]\n      }];\n      title = `Current status in ${country}`;\n  }\n\n  const lineChart = (\n      graphData && graphData[0] ?\n          <Line data={{\n              labels: graphData.map(({ date }) => date),\n              datasets: dataset\n          }} \n          options={{\n              title: { display: true, text: title }\n          }}/> : null\n  );\n\n  const barChart = graphData && graphData.confirmed ?\n      <Bar\n          data={{\n              labels: ['Confirmed', 'Recovered', 'Deceased'],\n              datasets: dataset\n          }}\n          options={{\n              legend: { display: false },\n              title: { display: true, text: title }\n          }} /> : null;\n\n  return (\n      <div className={styles.container}>\n          {country ? (country === 'India' ? lineChart : barChart) : null}\n          {!country ? lineChart : null}\n          {/* {country === 'India' ? lineChart : null} */}\n      </div>\n  );\n}\n\nexport default Chart;\n","import { FormControl } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { fetchCountries } from '../../api';\nimport styles from './CountryPicker.module.css';\n\nlet arr = [{ value: '', label: 'Global'}];\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      let count = await fetchCountries();\n      var len = count.length;\n      for (var i = 0; i < len; i++) {\n        arr.push({\n            value: count[i],\n            label: count[i],\n        });\n      }\n    await setCountries(arr);\n    };\n\n    fetchAPI();\n  }, []);\n\n  const handleChange = (selectedOption) => {\n      handleCountryChange(selectedOption.value);\n  }\n\n  return (\n    <>\n    <FormControl className={styles.formControl}>\n      <Select\n      className=\"basic-single\"\n      defaultValue={''}\n      placeholder={'Global'}\n      isSearchable={true}\n      onChange={handleChange}\n      name=\"color\"\n      options={countries}\n      style={{width: '50%'}}  \n      />\n    </FormControl>\n    </>\n  );\n};\n\nexport default Countries;\n","export const descendingComparator = (a, b, orderBy) => {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nexport const getComparator = (order, orderBy) => {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport const stableSort = (array, comparator) => {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}","import { makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TableSortLabel, Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport CountUp from 'react-countup';\nimport { getComparator, stableSort } from '../../utils';\nimport Delta from '../Delta/Delta';\nimport './DataTable.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nconst DataTable = ({ data, value, index, country }) => {\n    const classes = useStyles();\n    const [orderBy, setOrderBy] = useState('confirmed');\n    const [order, setOrder] = useState('desc');\n    // const [lastUpdate, setLastUpdate] = useState('');\n    let firstLabel = 'District', lastUpdate ='';\n\n    // if (value !== index) return null;\n    if (country === 'India') {\n        firstLabel = 'State/UT';\n        lastUpdate = '';\n        data = data && data.stateData ? data.stateData : [];\n    } else if (country === '') {\n        firstLabel = 'Country';\n        lastUpdate = '';\n    }\n\n    const headCells = [\n        { id: 'stateName', numeric: false, disablePadding: false, label: firstLabel },\n        { id: 'confirmed', numeric: true, disablePadding: false, label: 'Confirmed' },\n        { id: 'active', numeric: true, disablePadding: false, label: 'Active' },\n        { id: 'recovered', numeric: true, disablePadding: false, label: 'Recovered' },\n        { id: 'deaths', numeric: true, disablePadding: false, label: 'Deceased' }\n    ];\n\n    const tableData = data && !data.length ? (\n        <TableRow>\n            <TableCell align=\"center\" colSpan={5}>\n                <Typography variant=\"button\" display=\"block\" align='center'>\n                    Loading...\n                </Typography>\n            </TableCell>\n        </TableRow>) :\n        stableSort(data, getComparator(order, orderBy))\n            .map(({ stateName, confirmed, active, recovered, deaths, lastUpdated, \n                    deltaconfirmed, deltadeaths, deltarecovered }) => {\n                if (!lastUpdate) lastUpdate = lastUpdated;\n                return (\n                    <TableRow key={stateName} hover>\n                        <TableCell component=\"th\" scope=\"row\" className=\"table-cell\">\n                            {stateName}\n                        </TableCell>\n                        <TableCell align=\"right\" className=\"table-cell\">\n                            {deltaconfirmed > 0 ? <Delta inpCnt={deltaconfirmed} color='red' size='small'/> : null}\n                            <CountUp start={0} end={confirmed ? confirmed : 0} duration={1} separator=\",\" />\n                        </TableCell>\n                        <TableCell align=\"right\" className=\"table-cell\">\n                            <CountUp start={0} end={active ? active : 0} duration={1} separator=\",\" />\n                        </TableCell>\n                        <TableCell align=\"right\" className=\"table-cell\">\n                            {deltarecovered > 0 ? <Delta inpCnt={deltarecovered} color='green' size='small'/> : null}\n                            <CountUp start={0} end={recovered ? recovered : 0} duration={1} separator=\",\" />\n                        </TableCell>\n                        <TableCell align=\"right\" className=\"table-cell\">\n                            {deltadeaths > 0 ? <Delta inpCnt={deltadeaths} color='grey' size='small'/> : null}\n                            <CountUp start={0} end={deaths ? deaths : 0} duration={1} separator=\",\" />\n                        </TableCell>\n                        {/* <TableCell align=\"right\" className=\"table-cell\">{active}</TableCell>\n                        <TableCell align=\"right\" className=\"table-cell\">{recovered}</TableCell>\n                        <TableCell align=\"right\" className=\"table-cell\">{deaths}</TableCell> */}\n                    </TableRow>\n                )\n            });\n\n    const lastUpdatedSec = lastUpdate ? (<Typography variant=\"caption\" display=\"block\" align='center'>\n        Last Updated at {lastUpdate}\n    </Typography>) : null;\n\n    const handleSort = (property) => (event) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    }\n\n    return (\n        <>\n        {/* <div className=\"datatable-container\"> */}\n                {lastUpdatedSec}\n                <div className={classes.tableContainer}>\n                <TableContainer component={Paper}  className={classes.tableContainer}>\n                    <Table stickyHeader  aria-label=\"sticky table\">\n                        <TableHead>\n                            <TableRow>\n                                {headCells.map((headCell) => (\n                                    <TableCell\n                                        key={headCell.id}\n                                        align={headCell.numeric ? 'right' : 'left'}\n                                        padding={headCell.disablePadding ? 'none' : 'default'}\n                                        sortDirection={orderBy === headCell.id ? order : false}\n                                        className=\"table-cell\">\n                                        <TableSortLabel\n                                            active={orderBy === headCell.id}\n                                            direction={orderBy === headCell.id ? order : 'asc'}\n                                            onClick={handleSort(headCell.id)}\n                                            className=\"t-head\"\n                                        >\n                                            {headCell.label}\n                                            {orderBy === headCell.id ? (\n                                                <span className={classes.visuallyHidden}>\n                                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                                </span>\n                                            ) : null}\n                                        </TableSortLabel>\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {tableData}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                </div>\n        {/* </div> */}\n        </>\n    );\n}\n\nexport default DataTable;","import { Typography } from '@material-ui/core';\nimport React from 'react';\nimport './Footer.css';\n\n\nconst Footer = () => {\n    return (\n        <div className=\"footer-container\">\n            <Typography color=\"textSecondary\" display=\"block\" align='center'>\n                Corona Virus Live Statistics ©2020 Created with <span style={{color: '#e25555'}}>&hearts;</span> by <a href=\"https://virtuosArs.github.io/ARSOnePage\" target=\"_blank\" rel=\"noopener noreferrer\">Ankush Sankhe</a>\n            </Typography>\n            <Typography  color=\"textSecondary\" display=\"block\" align='center'>\n                Data Sources:\n                &nbsp;|&nbsp;<a href=\"https://api.covid19india.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Covid19India</a>\n                &nbsp;|&nbsp;<a href=\"https://covid19.mathdro.id/api/\" target=\"_blank\" rel=\"noopener noreferrer\">Mathdro</a>\n            </Typography>\n        </div>\n    );\n}\n\nexport default Footer;","import AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Fab from '@material-ui/core/Fab';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Zoom from '@material-ui/core/Zoom';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport covidLogo from '../../images/image.png';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  appBar: {\n      backgroundColor: '#fff',\n  },\n  toolBar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  }\n}));\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default function BackToTop(props) {\n    const classes = useStyles();\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar className={classes.appBar}>\n        <Toolbar className={classes.toolBar}>\n          {/* <Typography variant=\"h6\">Covid 19 Live</Typography> */}\n          <img src={covidLogo} alt=\"Covid 19\" height=\"41px\" />\n        </Toolbar>\n      </AppBar>\n      <Toolbar id=\"back-to-top-anchor\" />\n      <ScrollTop {...props}>\n        <Fab color=\"primary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </React.Fragment>\n  );\n}\n","import Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport React from 'react';\nimport { fetchCountryData, fetchDailyData, fetchIndiaData, fetchIndiaGraphData } from './api/';\nimport styles from './App.module.css';\nimport { Cards, Chart, CountryPicker, DataTable, Footer, Header } from './components';\n\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    graphData: [],\n    country: '',\n  }\n\n  async componentDidMount() {\n    // const data = await fetchData();\n    const data = await fetchCountryData();\n    const graphData = await fetchDailyData();\n\n    this.setState({ data, graphData });\n  }\n\n  handleCountryChange = async (country) => {\n    let data = {};\n    let graphData = [];\n\n    if(country === 'India') {\n      data = await fetchIndiaData();\n      graphData = await fetchIndiaGraphData();\n    }\n    else if(country !== 'India' && country) {\n      data = await fetchCountryData(country);\n      graphData = await fetchCountryData(country);\n    }\n    else {\n      data = await fetchCountryData();\n      graphData = await fetchDailyData();\n    }\n    this.setState({ data, country , graphData });\n  }\n\n  render() {\n    const { data, country, graphData } = this.state;\n\n    return (\n      <>\n        <Header />\n        <Container>\n          <Box my={2}>\n            <div className={styles.container}>\n              {/* <img className={styles.image} src={image} alt=\"COVID-19\" /> */}\n              <CountryPicker handleCountryChange={this.handleCountryChange} />\n              <Cards data={data} />\n              {/* <Chart data={data} country={country} /> */}\n              {graphData && country !== 'India' && <Chart graphData={graphData} country={country} />}\n              {\n                country === 'India' && graphData && data &&\n                <>\n                <Chart graphData={graphData} country={country} />\n                <DataTable data={data} country={country}/>\n                </>\n              } \n            </div>\n          </Box>\n        </Container>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\",\"newCard\":\"Cards_newCard__31UFl\",\"refreshDate\":\"Cards_refreshDate__3Q8K4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};"],"sourceRoot":""}